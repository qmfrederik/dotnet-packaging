language: csharp
mono: none
dotnet: 3.0.100-1
dist: xenial

branches:
  only:
    master

env:
  - RUNTIME=centos.7-x64
  - RUNTIME=ol.7-x64
  - RUNTIME=fedora.27-x64
  - RUNTIME=fedora.28-x64
  - RUNTIME=debian.8-x64
  - RUNTIME=debian.9-x64
  - RUNTIME=ubuntu.14.04-x64
  - RUNTIME=ubuntu.16.04-x64
  - RUNTIME=ubuntu.18.04-x64
  - RUNTIME=opensuse.42.3-x64

sudo: required

git:
  depth: false

script:
  - dotnet restore dotnet-packaging.sln
  - dotnet pack dotnet-packaging.sln -c Release
  - dotnet test Packaging.Targets.Tests/Packaging.Targets.Tests.csproj

  - export NuGetPackageVersion=$(cat demo/version.txt)
  - export PATH=$PATH:$HOME/.dotnet/tools

  - dotnet tool install --global --add-source dotnet-tarball/bin/Release/ dotnet-tarball --version $NuGetPackageVersion
  - dotnet tool install --global --add-source dotnet-zip/bin/Release/ dotnet-zip --version $NuGetPackageVersion
  - dotnet tool install --global --add-source dotnet-rpm/bin/Release/ dotnet-rpm --version $NuGetPackageVersion
  - dotnet tool install --global --add-source dotnet-deb/bin/Release/ dotnet-deb --version $NuGetPackageVersion

  - cd $TRAVIS_BUILD_DIR/demo/aspnetcore
  - dotnet restore
  - if [ "$RUNTIME" = "rhel.7-x64" ]; then dotnet rpm -c Release -r rhel.7-x64 -f netcoreapp3.0; fi
  - if [ "$RUNTIME" = "ubuntu.16.04-x64" ]; then dotnet deb -c Release -r ubuntu.16.04-x64 -f netcoreapp3.0; fi

  - cd $TRAVIS_BUILD_DIR/demo/cliscd/
  - dotnet restore

  - ./run-tests.sh -r $RUNTIME